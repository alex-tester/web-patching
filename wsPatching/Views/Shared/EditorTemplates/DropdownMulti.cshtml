@model string
@{
    string FieldValue = ViewBag.Value ?? Model;
    string FieldName = ViewData.TemplateInfo.HtmlFieldPrefix.Split(new char[] { '.' }, StringSplitOptions.RemoveEmptyEntries)[0];
    string ValErrorMessage = "Please provide the " + ViewBag.Title;
    string Placeholder = "Please select the " + ViewBag.Title;
    bool FieldDisabled = ViewBag.FieldDisabled;
    List<SelectListItem> selectList = ViewBag.List;

    var valueList = FieldValue.Split(new char[] { ',',';' }, StringSplitOptions.RemoveEmptyEntries).ToList();

}




@{

    if (bool.Parse(ViewData["Required"].ToString()))
    {

        <select class="js-select2 form-control " id="@FieldName" name="@FieldName" required multiple data-placeholder="@Placeholder">
            <option></option>
            @foreach (var item in selectList)
            {
                if (valueList.Contains(item.Value))
                {
                    <option value="@item.Value" selected="selected">@item.Text</option>
                }
                else
                {
                    <option value="@item.Value">@item.Text</option>
                }
            }
        </select>

    }
    else
    {

        <select class="form-control js-select2" id="@FieldName" name="@FieldName" multiple data-placeholder="@Placeholder">
            <option></option>
            @foreach (var item in selectList)
            {
                if (valueList.Contains(item.Value))
                {
                    <option value="@item.Value" selected="selected">@item.Text</option>
                }
                else
                {
                    <option value="@item.Value">@item.Text</option>
                }
            }
        </select>
    }

}

